name: Sync Upstream and Apply Modifications

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'
  push:
    branches:
      - main
    paths:
      - '.github/workflows/mydiywode.yml'

permissions:
  contents: write

jobs:
  sync-and-modify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Set up upstream remote
        run: |
          git remote add upstream https://github.com/ysuolmai/OpenWRT-CI.git || true
          git remote -v

      - name: Fetch upstream changes
        run: |
          echo "Fetching from upstream..."
          git fetch upstream

      - name: Check for upstream updates
        id: check_updates
        run: |
          echo "检查上游仓库是否有新提交..."
          NEW_COMMITS=$(git rev-list HEAD..upstream/main 2>/dev/null || echo "")
          if [ -n "$NEW_COMMITS" ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "✅ 发现上游新提交！准备同步..."
            echo ""
            echo "================================"
            echo "上游新提交列表："
            echo "================================"
            git log HEAD..upstream/main --oneline --max-count=20
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "✅ 上游没有新提交。无需同步。"

      - name: Merge upstream changes
        if: ${{ steps.check_updates.outputs.has_updates == 'true' }}
        run: |
          echo "合并上游更改..."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if git merge upstream/main --no-edit; then
            echo "✓ 成功合并上游更改"
          else
            echo "✗ 合并冲突，尝试使用 rebase"
            git merge --abort || true
            if git rebase upstream/main; then
              echo "✓ 成功 rebase 上游更改"
            else
              echo "✗ Rebase 失败，使用 theirs 策略"
              git rebase --abort || true
              git merge upstream/main -X theirs --no-edit
              echo "⚠ 使用上游版本解决冲突"

      - name: Disable OWRT-ALL workflow
        if: ${{ steps.check_updates.outputs.has_updates == 'true' }}
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail
          TOKEN="${PAT_TOKEN:-$GITHUB_TOKEN}"
          echo "检查并禁用 OWRT-ALL.yml 工作流..."
          resp=$(curl -s -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/${REPO}/actions/workflows")
          WF_ID=$(printf '%s' "$resp" | python3 - <<'PY'
import sys,json
data=json.load(sys.stdin)
for w in data.get("workflows", []):
    if w.get("path", "").endswith("OWRT-ALL.yml") or w.get("name", "").lower().find("owrt-all") != -1:
        print(w.get("id"))
        sys.exit(0)
PY
)
          if [ -n "$WF_ID" ]; then
            echo "找到 OWRT-ALL 工作流 ID: $WF_ID"
            code=$(curl -s -o /dev/null -w "%{http_code}" -X PUT \
              -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${REPO}/actions/workflows/${WF_ID}/disable")
            if [ "$code" = "204" ]; then
              echo "✅ 已通过 API 成功禁用 OWRT-ALL 工作流"
              exit 0
            else
              echo "⚠️ API 禁用失败，HTTP 状态: $code"
            fi
          fi
          if [ -f ".github/workflows/OWRT-ALL.yml" ]; then
            mv ".github/workflows/OWRT-ALL.yml" ".github/workflows/OWRT-ALL.yml.disabled"
            echo "⚠️ 已重命名以禁用 .github/workflows/OWRT-ALL.yml"
          else
            echo "⚠️ 未找到 .github/workflows/OWRT-ALL.yml 文件"

      - name: Apply 4 modifications to Scripts/diy.sh
        if: ${{ steps.check_updates.outputs.has_updates == 'true' }}
        run: |
          cat > modify.py << 'ENDPY'
import re, sys
try:
    with open('Scripts/diy.sh', 'r', encoding='utf-8') as f:
        content = f.read()
except FileNotFoundError:
    print("错误: Scripts/diy.sh 文件不存在！")
    sys.exit(1)

# 修改1
old_pattern = r'("smartdns" "kucat" "bootstrap")\n\)'
new_replacement = r'\1 "zn_m2" "redmi_ax5" "qihoo_360v6" "redmi_ax5-jdcloud" "link_nn6000-v2" "link_nn6000-v1" "cmiot_ax18" "anysafe_e1"\n)'
content = re.sub(old_pattern, new_replacement, content)

# 修改2
additions = '\t"CONFIG_PACKAGE_git-http=y"\n\t"CONFIG_PACKAGE_curl=y"\n\t"CONFIG_PACKAGE_openssl-util=y"\n\t"CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y"\n\t"CONFIG_PACKAGE_kmod-usb-net-rndis=y"'
content = re.sub(r'(    "CONFIG_PACKAGE_cifsmount=y")\n(\))', r'\1\n' + additions + r'\n\2', content)

# 修改3
if "Fix PPP / UPnP issues" not in content:
    fix_section = """
#######################################
# Fix PPP / UPnP issues
#######################################
mkdir -p package/base-files/files/etc/uci-defaults
cat << 'EOF' > package/base-files/files/etc/uci-defaults/99-custom-fixes
#!/bin/sh
sed -i '8c maxfail 1' /etc/ppp/options
sed -i '192c sleep 30' /lib/netifd/proto/ppp.sh
sed -i '10c option external_ip "59.111.160.244"' /etc/config/upnpd
exit 0
EOF
chmod +x package/base-files/files/etc/uci-defaults/99-custom-fixes
"""
    content += '\n' + fix_section

# 修改4
content = content.replace('"CONFIG_PACKAGE_luci-app-dockerman=m"', '"CONFIG_PACKAGE_luci-app-dockerman=y"')
content = content.replace('"CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=m"', '"CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y"')

with open('Scripts/diy.sh', 'w', encoding='utf-8') as f:
    f.write(content)
print("✅ 所有修改已完成")
ENDPY
          python3 modify.py
          rm -f modify.py

      - name: Commit and push changes
        if: ${{ steps.check_updates.outputs.has_updates == 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "ℹ️ 没有需要提交的更改"
          else
            git commit -m "chore: sync upstream + apply diy.sh modifications + disable OWRT-ALL workflow"
            git pull origin main --rebase || git rebase --abort || true
            git push origin main
            echo "✅ 推送成功"

      - name: Summary
        if: always()
        run: |
          echo "================================"
          echo "📊 执行摘要"
          echo "================================"
          if [ "${{ steps.check_updates.outputs.has_updates }}" == "true" ]; then
            echo "✅ 上游有更新并已同步"
            echo "✅ 已禁用 OWRT-ALL.yml 工作流"
            echo "✅ 已修改 Scripts/diy.sh"
          else
            echo "ℹ️ 无上游更新"
          fi
          echo "================================"
